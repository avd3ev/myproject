если класс это чертеж, то абстрактный класс это набросок
abstract class DB{
 $hello = 'hello';
 function hi(){}
 abstract function db_conn($a);
 abstract function db_open();
}
class B extends DB{
 function db_conn($a){}
 function db_open(){}
}
$obj = new B();

- от обстрактного класса нельзя создать объект
- абстрактные методы, обязательно должны быть перегружены в классе потомке
- абстрактный класс может содержать обычные свойства и методы

Это удобно для контроля
Руководитель проекта раздал абстрактный класс команде и может быть уверен
что все абстрактные методы будут реализованы иначе - "fatal error"

если абстрактный класс это набросок чертежа, то интерфейс это грубый набросок
- от интерфейса нельзя создать объект
- методы интерфейса, обязательно должны быть перегружены в классе потомке
- интерфейс состоит только из абстрактных методов, в нем нет свойств
- класс может быть наследован от нескольких интерфейсов

interface DB{
 function db_conn($a);
 function db_open();
}
interface Show{
 function show_status();
}

class B implements DB, Show{
 function db_conn($a){}
 function db_open(){}
 function show_status(){}
}
$obj = new B();

допустимо также наследование от одного класса и несколько интерфейсов
class A extends B implements C,D,E {}

P.S.
final class A{}
final function foo(){}
в этом случае класс нельзя наследовать, а функцию переопределить
